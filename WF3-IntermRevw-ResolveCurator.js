/// <reference types="Cypress"/>
/// <reference types="cypress-xpath"/>
const CREDENTIALS = require('../fixtures/Credentials.json')
import { func } from 'assert-plus';
import 'cypress-wait-until';

describe('Workbench login and Dashboard',function()
{
    it.skip('Admin assign WF3 task to Lead',function()
    {
        cy.User1(CREDENTIALS.Useradmin,CREDENTIALS.Pwd)
        cy.intercept('/workbench/dashboard/getProjectDataByUserIDOrProjectID?projectId=210&status=Draft')
        .as('draft')
        cy.contains('testing project').click()
        cy.wait(2000)
        cy.get(':nth-child(4) > .nav-link').click({force:true})
        Cypress.on('uncaught:exception', (err, runnable) => {return false;});
        // cy.get('[title="3"] > .page-link').click()
        cy.get('tbody > :nth-child(1) > :nth-child(2) > :nth-child(1) > span')
            .should('include.text','Automation Project')
        cy.get(':nth-child(1) > :nth-child(5) > :nth-child(1) > div > [title="Assign User"] > .fas')
          .click()
        // cy.wait('@draft')
        cy.get(':nth-child(1)>.selection-cell>input').check().should('be.checked')
        cy.get('select').eq(1).select('3').should('include.text','workflow3')
        cy.wait(1000)
        cy.get('select').eq(0).select('18').should('include.text','Lavanya  Lavanya ')
        cy.get('.blue').click()
    })
    it.skip('Lead Signin',function(){
        cy.Lead(CREDENTIALS.Lead,CREDENTIALS.Pwd)
        cy.intercept('/workbench/home').as('home')
        cy.contains('TestSantoshiMP').click()
        cy.wait(2000)
        cy.get(':nth-child(3) > .nav-link').click({force:true})
        Cypress.on('uncaught:exception', (err, runnable) => {return false;});        
        cy.get(':nth-child(4) > .nav-link > span').click({force:true})
        cy.get(':nth-child(1) > :nth-child(5) > :nth-child(1) > div > [title="Assign User"] > .fas')
            .should('be.visible').click()
        cy.get(':nth-child(1)>.selection-cell>input').check().should('be.checked')
        cy.get('select').eq(0).select('14').should('include.text','lalitha g')
        cy.get('.test-header>:nth-child(4)').select('firstname Lokireddy').should('include.text','firstname Lokireddy')
        cy.get('.blue').click()
    })
    it.skip('Curator Signin',function(){
        cy.Workflow3()
    })
    it.skip('Initial Reviewer Signin',function(){
        cy.Workflow3_Reviewer()
    })
    it.skip('Interim Reviewer Signin',function(){
        cy.Lead(CREDENTIALS.Lead,CREDENTIALS.Pwd)
        Cypress.on('uncaught:exception', (err, runnable) => {  return false;  });
        cy.contains('Automation Project').click().should('include.text','Automation Project')
        cy.get('#react-tabs-8').click().should('have.text','Interim Review')
        cy.get('tbody > :nth-child(1) > :nth-child(4)').should('have.text','workflow3')
        cy.get('.react-bootstrap-table').scrollTo('right')
        cy.get('.orange2').click()
        cy.get('#react-tabs-48').click().should('include.text','patient_characteristics')
        cy.get('[style="display: flex;"] > :nth-child(3)').scrollTo('bottom')
        cy.get('#CommentsId').type('Check Pt-Sex data').should('include.text','Check Pt-Sex data')
        cy.contains('Submit').click()
        cy.get('[title="Actions"]').invoke('mouseover')
        cy.get('[title="Resolve (curator only) "]').click({force:true})
        cy.contains('Ok').click()
        cy.on('window:alert', (str) => {
            expect(str).to.equal('This involves both curator/reviewer.')
        })
    })
    it.skip('curator Resubmit to Reviewer',function(){
        cy.User1(CREDENTIALS.User1,CREDENTIALS.Pwd)
        Cypress.on('uncaught:exception', (err, runnable) => {  return false;  });
        cy.contains('Automation Project').click().should('include.text','Automation Project')
        cy.get('#react-tabs-12').click().should('have.text','Query Tasks')
        cy.get('tbody > :nth-child(1) > :nth-child(4)').should('have.text','workflow3')
        cy.get('.colorBarQueryFlag').click()
        cy.get('#exampleModalLabel').should('have.text','Query Information')
        cy.get(':nth-child(1) > .dottext').should('have.text',' New Query ( count : 1 )')
        cy.wait(1000)
        cy.get('.close').click()
        cy.get('.react-bootstrap-table').scrollTo('right')
        cy.get('.blue2').click()
        cy.wait(2000)
        cy.get('[title="Edit"] > .fas').click()
        cy.get('[style="display: flex;"] > :nth-child(1)').scrollTo('center')
        cy.get('#react-select-2-input').type('Fe{enter}')
        cy.get('.blue').click()
        cy.wait(10000)
        cy.get('#react-tabs-44').click().should('include.text','Queries ')
        cy.get('.table-container > :nth-child(1) > .react-bootstrap-table').scrollTo('right')
        cy.get(':nth-child(10) > .icon > .fas').should('be.visible').click()
        cy.get('#queryId').type('Checked').should('include.text','Checked')
        cy.get('form > div > .blue').should('include.text','Submit').click()
        cy.get('[title="Actions"]').invoke('mouseover')
        cy.get('[title="Interim Review"]').click({force:true})
        cy.wait(3000)
        cy.contains('Ok').click()
        cy.on('window:alert', (str) => {
            expect(str).to.equal('The task will be moved to Interim Review(Project Lead). Please confirm.')
        })
    })
    it.skip('Lead Resolve the query',function(){
        cy.Lead(CREDENTIALS.Lead,CREDENTIALS.Pwd)
        Cypress.on('uncaught:exception', (err, runnable) => {  return false;  });
        cy.contains('Automation Project').click().should('include.text','Automation Project')
        cy.get('#react-tabs-8').click().should('have.text','Interim Review')
        cy.get('tbody > :nth-child(1) > :nth-child(4)').should('have.text','workflow3')
        cy.get('.colorBarQueryFlag').click()
        cy.get('#exampleModalLabel').should('have.text','Query Information')
        cy.get(':nth-child(3) > .dottext').should('have.text',' Query responded to, waiting for feedback ( count : 1 )')
        cy.wait(1000)
        cy.get('.close').click()
        cy.get('.react-bootstrap-table').scrollTo('right')
        cy.get('.orange2').click()
        cy.get('#react-tabs-48').click().should('include.text','patient_characteristics')
        cy.wait(2000)
        cy.get('#react-tabs-46').click().should('include.text','Queries')
        cy.get('.table-container > :nth-child(1) > .react-bootstrap-table').scrollTo('right')
        cy.get(':nth-child(10) > .icon > .fas').should('be.visible').click()
        cy.get('#queryId').type('Checked').should('include.text','Checked')
        cy.get('.green').should('include.text','Resolved').click()
        cy.wait(1000)
        cy.get('[title="Actions"]').invoke('mouseover')
        cy.get('[title="Active Review"]').click({force:true})
        cy.wait(3000)
        cy.contains('Ok').click()
        cy.on('window:alert', (str) => {
            expect(str).to.equal('The task will be moved to Active Review. Please confirm.')
        })
    })
})