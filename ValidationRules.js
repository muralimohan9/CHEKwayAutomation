/// <reference types="Cypress"/>
/// <reference types="cypress-xpath"/>
const CREDENTIALS = require('../fixtures/Credentials.json')
import 'cypress-wait-until';

describe('Workbench login and Dashboard',function()
{
    it('Signin',function()
    {
        cy.Signin(CREDENTIALS.Useradmin,
            CREDENTIALS.adminpwd)
    })
    it.skip('Add Validation', function(){
        // cy.get(':nth-child(4) > .nav-link').click({force:true})
        cy.contains('testing project').click()
        cy.wait(2000)
        cy.get(':nth-child(4) > .nav-link').click({force:true})
        Cypress.on('uncaught:exception', (err, runnable) => {
            return false;
          });
        cy.get('tbody > :nth-child(1) > :nth-child(2) > :nth-child(1) > span')
            .should('include.text','Automation Project')
        cy.get(':nth-child(1)>:nth-child(5)>:nth-child(1)>div>[title="Edit"]>.fas')
          .click()
        cy.contains('5').should('include.text','5').click()
        cy.wait(1000)
        // Cross DC Validation Rules
        cy.CrossDC()
        cy.get('.css-yk16xz-control')
          .type('th{enter}').should('have.text','radiation_therapy')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
          .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.CrossDC()
        cy.get('.css-yk16xz-control')
          .type('si{enter}').should('have.text','radiation_site')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
          .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.CrossDC()
        cy.get('.css-yk16xz-control')
          .type('sta{enter}').should('have.text','radiation_start_date')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
        .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.CrossDC()
        cy.get('.css-yk16xz-control')
          .type('end{enter}').should('have.text','radiation_end_date')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
        .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.CrossDC()
        cy.get('.css-yk16xz-control')
          .type('radiation_ty{enter}').should('have.text','radiation_type')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
          .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()

        // Same DC Validation Rules
        
        cy.SameDC_VR()
        cy.get('.css-yk16xz-control')
          .type('si{enter}').should('have.text','radiation_site')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
          .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.SameDC_VR()
        cy.get('.css-yk16xz-control')
          .type('sta{enter}').should('have.text','radiation_start_date')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
        .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.SameDC_VR()
        cy.get('.css-yk16xz-control')
          .type('end{enter}').should('have.text','radiation_end_date')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
        .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
        cy.wait(1000)
        cy.SameDC_VR()
        cy.get('.css-yk16xz-control')
          .type('radiation_ty{enter}').should('have.text','radiation_type')
        cy.get(':nth-child(2) > fieldset > .row > :nth-child(3) > [style="white-space: nowrap;"] > [title="NOT_APPLICABLE"] > .fas')
          .click()
        cy.get('.validateInfo').click()
        cy.get('div > .actionButton').click()
    })
    it('Upload Validation Rules', function(){
      const VR_Rules ="Validation Rules.xslx"
      cy.contains('testing project').click()
      cy.wait(2000)
      cy.get(':nth-child(4) > .nav-link').click({force:true})
      Cypress.on('uncaught:exception', (err, runnable) => {
          return false;
        });
      cy.get('tbody > :nth-child(1) > :nth-child(2) > :nth-child(1) > span')
          .should('include.text','Automation Project')
      cy.get(':nth-child(1)>:nth-child(5)>:nth-child(1)>div>[title="Edit"]>.fas')
        .click()
      cy.contains('5').should('include.text','5').click()
      cy.wait(1000)
      cy.get('.panel-body').scrollTo('center')
      cy.get('[title="Download"]').click().should('be.visible')
      cy.wait(3000)
      cy.get('[type="file"]').attachFile({ filePath: 'Validation Rules.xlsx', fileName: 'VR_Rules' })
      // cy.get('.fa-caret-right').click().should('be.ok')
      cy.get('.panel-body').scrollTo('top')
      cy.get('[title="Back"]').click()
    })
    
})