/// <reference types="Cypress"/>
/// <reference types="cypress-xpath"/>
const CREDENTIALS = require('../fixtures/Credentials.json')
import 'cypress-wait-until';

describe('Workbench login and Dashboard',function()
{
    it.skip('Admin query raised WF3 task',function(){
        cy.intercept('/workbench/dashboard/getEavEntityByTaskId?taskId=280758&projectId=210&cohortName=CypCohort&fromTaskReportSummary=true')
            .as('getTSD')
        cy.Signin(CREDENTIALS.Useradmin,CREDENTIALS.Pwd)
        cy.contains('testing project').click()
        cy.wait(2000)
        cy.get(':nth-child(4) > .nav-link').click({force:true})
        Cypress.on('uncaught:exception', (err, runnable) => {return false;});
        cy.get(':nth-child(4)>.nav-link').click().should('have.text',' Projects')
        cy.get('[title="5"]').click()
        cy.get(':nth-child(4)>:nth-child(2)>:nth-child(1)>:nth-child(2)>:nth-child(1)>div>[title="Task Summary Data Report"]')
          .click()
        cy.get(':nth-child(1) > .css-10xt3zp-container > .css-tu25sd-control').type('Act{enter}')
          .should('have.text','Active Review')
        cy.get(':nth-child(2) > .css-10xt3zp-container > .css-tu25sd-control').type('5ce5{enter}')
          .should('have.text','1461808c52fb020b5ce5')
        cy.get('.row > :nth-child(1) > input').check().should('be.checked')
        cy.get('.blue').click().should('have.text','Get Data')
        cy.wait('@getTSD')
        cy.get('.panel-body').scrollTo('center')
        cy.wait(30000)
        cy.get('#CommentsId').type('check all data').should('have.text','check all data')
        cy.contains('Submit').click()
        cy.get('.panel-body').scrollTo('top')
        cy.get('.col-md-3 > input').check().should('be.checked')
        cy.get(':nth-child(4) > .blue').click({force:true})
        cy.get('#commentsArea').type('Done').should('have.text','Done')
        cy.get('form > div > .blue').click().should('have.text','Submit')
    })
    it('Curator Submit task without query reply',function(){
        cy.intercept('workbench/searchCategory/getCategorysAndTermsAndSynByProjectId?projectId=210').as('getQuer')
        cy.User1(CREDENTIALS.User1,CREDENTIALS.Pwd)
        cy.contains('TestCypProject').click({force:true}).should('include.text','TestCypProject')
        cy.get('#react-tabs-12').click().should('have.text','Query Tasks')
        cy.get('.colorBarQueryFlag').click()
        cy.get(':nth-child(1) > .dottext').should('have.text',' New Query ( count : 1 )')
        cy.get('.close > span').click()
        cy.get('.react-bootstrap-table').scrollTo('right')
        cy.get('.blue2').click()
        cy.wait(2000)
        cy.get('#react-tabs-44').click().should('have.text','Queries')
        cy.wait('@getQuer')
        cy.get('[title="Actions"]').invoke('mouseover')
        cy.get('[title="Active Review"]').click({force:true})
        cy.contains('OK').click()
        cy.on('window:alert', (str) => {
            expect(str).to.equal('Please respond to all the queries')
        })
    })
})